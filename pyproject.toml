[build-system]
requires = ["hatchling>=1.27.0"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["meshparty"]

[project]
name = "meshparty"
version = "2.0.1"
description = "a service to work with meshes"
authors = [
    {name = "Sven Dorkenwald", email = "svenmd@princeton.edu"},
    {name = "Forrest Collman", email = "forrestc@alleninstitute.org"},
    {name = "Casey Schneider-Mizell", email = "caseys@alleninstitute.org"},
]
readme = "README.rst"
requires-python = ">=3.10"
license = {text = "MIT"}
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "h5py",
    "numpy>=2.0.0",
    "scipy>=1.3.0",
    "scikit-learn",
    "multiwrapper",
    "cloud-volume>=1.16.0",
    "tables>=3.0.0",
    "blosc>=1.11.2",
    "orjson>=3.0.0",
    "pandas>=2.0.0",
    "trimesh[easy]>=4.0.0",
    "networkx",
]

[dependency-groups]
dev = [
    "pytest-mock",
    "ipykernel",
    "imageio",
    "vtk",
]


[project.optional-dependencies]
REPAIR = ["caveclient>=4.0.0"]
test = [
    "pytest",
    "pytest-cov",
    "pytest-mock"
]
viz = [
    "vtk"
]

[project.urls]
"Homepage" = "https://github.com/CAVEconnectome/MeshParty"
"Bug Tracker" = "https://github.com/CAVEconnectome/MeshParty/issues"

[tool.setuptools]
packages = ["meshparty"]
include-package-data = true

[tool.setuptools_scm]
write_to = "meshparty/_version.py"

[tool.pytest.ini_options]
testpaths = ["test"]
required_plugins = ["pytest-mock"]

[tool.bumpversion]
current_version = "2.0.1"
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
regex = false
ignore_missing_version = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} â†’ {new_version}"
allow_dirty = false
commit = true
message = "v{new_version}"
commit_args = ""

[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""

[[tool.bumpversion.files]]
filename = "meshparty/__init__.py"
search = "__version__ = \"{current_version}\""
replace = "__version__ = \"{new_version}\""